{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}


module Snoble.Scalambda exposing
    ( Simple
    , simpleDecoder
    , toSimpleEncoder
    )

{-| ProtoBuf module: `Snoble.Scalambda`

This module was generated automatically using

  - [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 1.0.0-beta-2
  - `protoc` 3.11.4
  - the following specification file: `src/main/proto/simple.proto`

To run it use [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.1.0) version 1.1.0 or higher.


# Model

@docs Simple


# Decoder

@docs simpleDecoder


# Encoder

@docs toSimpleEncoder

-}

import Protobuf.Decode as Decode
import Protobuf.Encode as Encode



-- MODEL


{-| `Simple` message
-}
type alias Simple =
    { first : String
    , second : String
    }



-- DECODER


{-| `Simple` decoder
-}
simpleDecoder : Decode.Decoder Simple
simpleDecoder =
    Decode.message (Simple "" "")
        [ Decode.optional 1 Decode.string setFirst
        , Decode.optional 2 Decode.string setSecond
        ]



-- ENCODER


{-| `Simple` encoder
-}
toSimpleEncoder : Simple -> Encode.Encoder
toSimpleEncoder model =
    Encode.message
        [ ( 1, Encode.string model.first )
        , ( 2, Encode.string model.second )
        ]



-- SETTERS


setFirst : a -> { b | first : a } -> { b | first : a }
setFirst value model =
    { model | first = value }


setSecond : a -> { b | second : a } -> { b | second : a }
setSecond value model =
    { model | second = value }
